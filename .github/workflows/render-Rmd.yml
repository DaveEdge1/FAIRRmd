# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    paths: ['**.Rmd']
  workflow_dispatch:

name: render-rmarkdown.yaml

permissions: read-all

jobs:
  render-rmarkdown:
    runs-on: windows-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # install linux packages
      # - name: install linux packages
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get -y install binutils-dev libcurl4-openssl-dev libssl-dev

      # install linux packages
      #- name: install linux packages
      #  run: |
      #    sudo apt-get update
      #    sudo apt-get -y install binutils-dev libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev \
      #    libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2

      #- name: install jsonlite and pak
      #  run: |
      #    Rscript -e "install.packages('jsonlite')"
      #    Rscript -e "install.packages('pak')"

      #- name: Generate apt.txt from renv.lock
      #  run: |
      #    Rscript -e "
      #    library(jsonlite);
      #    library(pak);
      #    lockfile <- fromJSON('renv.lock');
      #    packages <- names(lockfile\$Packages);
      #    pak::pkg_sysreqs(pkg=packages, sysreqs_platform = 'ubuntu', dependencies = TRUE);
      #    writeLines(sys_deps$install_scripts, 'apt.txt');"

      # - name: Install System Dependencies
      #  run: |
      #    if [ -f apt.txt ]; then
      #      sudo apt-get update -y
      #      xargs sudo apt-get install -y < apt.txt
      #    fi

      - uses: r-lib/actions/setup-renv@v2

      - name: Render and commit md
        run: |    
          Rscript -e 'for (f in commandArgs(TRUE)) if (file.exists(f)) rmarkdown::render(f, output_format = "md_document")' "example.Rmd" 
          git config --local user.name ${{ github.actor }}
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git add example.md figures/
          git commit -m 'Re-build Rmarkdown file' || echo "No changes to commit"
          git push -f origin
